/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.Timer;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import main.PromptGetter;

/**
 *
 * @author Tommy Hendricks
 */
public class TypeSomethingVinillaRaceWin extends javax.swing.JFrame implements ActionListener{
    private Color black = Color.WHITE;
    private Color green = Color.GREEN;
    private Color red = new Color(100, 40, 60);
    private int currentLetterNumber;
    private String prompt;
    private boolean startRace;
    
    private Timer timer;
    private int speed;
    private int loop;
    
    private main.PromptGetter pg;
    private main.TypeSomethingVinillaRace raceData;
    private main.PlayerData pd;
    private MainScreenWin msw;
    
    /**
     * Creates new form TypeSomethingVinillaRaceWin
     */
    public TypeSomethingVinillaRaceWin(MainScreenWin msw) {
        this.msw = msw;
        
        startRace = false;
        currentLetterNumber = 0;
        speed = 1000;
        loop = 4;
        
        //makes new promptGetter
        pg = new PromptGetter();
        
        //Gets and send the prompot to the raceData class and t
        this.prompt = pg.getPrompt();
        raceData = new main.TypeSomethingVinillaRace(this.prompt);
        
        initComponents();
        
        //Setting up the jTextArea so that it will work correctly 
        SimpleAttributeSet attributeSet = new SimpleAttributeSet();
        StyleConstants.setItalic(attributeSet, true);
        this.panePromptArea.setCharacterAttributes(attributeSet, true);
                
        Font font = new Font("Arial", Font.BOLD, 26);
        this.panePromptArea.setFont(font);
        
        this.setPaneAreaPrompt();
        
        timer = new Timer(speed, this);
        timer.setInitialDelay(0);
        timer.start(); 
        
        this.paneUserInputArea.setEditable(false);
        this.NextRace.setEnabled(false);
        //this.paneUserInputArea.requestFocus();
    }
    
    /**
     * This will set the text of the prompt area to match the current inputs.
     * This will be updated should be updated every time a key is pressed.
     */
    public void setPaneAreaPrompt(){
        StyledDocument doc = this.panePromptArea.getStyledDocument();
        Style style = this.panePromptArea.addStyle("", null);
        panePromptArea.setText("");
        try{
            StyleConstants.setForeground(style, green);
            StyleConstants.setBackground(style, Color.BLACK);
            doc.insertString(doc.getLength(), raceData.getCorrectLetters(), style);
            
            StyleConstants.setForeground(style, Color.white);
            StyleConstants.setBackground(style, red);
            doc.insertString(doc.getLength(), raceData.getIncorrectLetters(), style);   
            
            StyleConstants.setForeground(style, Color.WHITE);
            StyleConstants.setBackground(style, Color.GRAY);
            doc.insertString(doc.getLength(), raceData.getCurrentLetterToDisplay(), style);
            
            StyleConstants.setForeground(style, black);
            StyleConstants.setBackground(style, Color.BLACK);
            doc.insertString(doc.getLength(), raceData.getNormalLetters(), style);
        }
        catch(Exception e){
            
        }
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        if(this.loop == 4)
            this.startLight.setIcon(new ImageIcon(getClass().getResource("/RedLight.png")));
        else if (this.loop == 2)
            this.startLight.setIcon(new ImageIcon(getClass().getResource("/YellowLight.png")));
        else if(this.loop == 0){
            this.startLight.setIcon(new ImageIcon(getClass().getResource("/GreenLight.png")));
            this.startRace = true;
            this.paneUserInputArea.setEditable(true);
            this.paneUserInputArea.requestFocus();
            raceData.startTimer();
            timer.stop();
        }
        if(this.loop == 0)
            this.TimeLeftTillRace.setText("10");
        this.TimeLeftTillRace.setText(String.valueOf(loop));
        loop--;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        NextRace = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        paneUserInputArea = new javax.swing.JTextPane();
        MainMenu = new javax.swing.JButton();
        correctColorShowerPannel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        panePromptArea = new javax.swing.JTextPane();
        TimeLeftTillRace = new javax.swing.JLabel();
        startLight = new javax.swing.JLabel();
        TypeSpeed = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        NextRace.setText("Next Race >>");
        NextRace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextRaceActionPerformed(evt);
            }
        });

        paneUserInputArea.setEditable(false);
        paneUserInputArea.setBackground(new java.awt.Color(0, 0, 0));
        paneUserInputArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        paneUserInputArea.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        paneUserInputArea.setForeground(new java.awt.Color(255, 255, 255));
        paneUserInputArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        paneUserInputArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                paneUserInputAreaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                paneUserInputAreaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                paneUserInputAreaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(paneUserInputArea);

        MainMenu.setText("<< Main Menu");
        MainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainMenuActionPerformed(evt);
            }
        });

        correctColorShowerPannel.setBackground(new java.awt.Color(255, 255, 255));
        correctColorShowerPannel.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout correctColorShowerPannelLayout = new javax.swing.GroupLayout(correctColorShowerPannel);
        correctColorShowerPannel.setLayout(correctColorShowerPannelLayout);
        correctColorShowerPannelLayout.setHorizontalGroup(
            correctColorShowerPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        correctColorShowerPannelLayout.setVerticalGroup(
            correctColorShowerPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        panePromptArea.setEditable(false);
        panePromptArea.setBackground(new java.awt.Color(0, 0, 0));
        panePromptArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panePromptArea.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        panePromptArea.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        jScrollPane2.setViewportView(panePromptArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
        );

        TimeLeftTillRace.setBackground(new java.awt.Color(0, 0, 0));
        TimeLeftTillRace.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        TimeLeftTillRace.setForeground(new java.awt.Color(255, 255, 255));
        TimeLeftTillRace.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TimeLeftTillRace.setText("0");
        TimeLeftTillRace.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        startLight.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        startLight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RedLight.png"))); // NOI18N

        TypeSpeed.setBackground(new java.awt.Color(0, 0, 0));
        TypeSpeed.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        TypeSpeed.setForeground(new java.awt.Color(255, 255, 255));
        TypeSpeed.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TypeSpeed.setText("0WPM");
        TypeSpeed.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(MainMenu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(NextRace))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
                            .addComponent(correctColorShowerPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(TimeLeftTillRace, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(213, 213, 213))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(startLight, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(123, 123, 123)))
                            .addComponent(TypeSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(44, 44, 44))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TypeSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startLight, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TimeLeftTillRace)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(correctColorShowerPannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MainMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(NextRace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Should handle resetting the race when the Next Race button is clicked.
     * @param evt 
     */
    private void NextRaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextRaceActionPerformed
        //Call the reset function, Sets normal letters to the correct prompt
        //Sets the prompt area. 
        
        this.raceData.resetRace();
        
        raceData.setNormalLetters(raceData.getPrompt());
        this.TimeLeftTillRace.setText("4");
        this.TypeSpeed.setText("0");
        this.correctColorShowerPannel.setBackground(Color.GRAY);
        this.paneUserInputArea.setText("");
        this.setPaneAreaPrompt();
        this.paneUserInputArea.setEditable(false);
        
        this.loop = 4;
        this.timer.start();
        this.NextRace.setEnabled(false);
    }//GEN-LAST:event_NextRaceActionPerformed

    private void MainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainMenuActionPerformed
        this.setVisible(false);
        msw.setVisible(true);
    }//GEN-LAST:event_MainMenuActionPerformed

    private void paneUserInputAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paneUserInputAreaKeyTyped
        
        if(!raceData.getPromptcompleted() && this.startRace){
            if(raceData.getCurrentWrong() <= 6 && !raceData.getPromptcompleted())
                this.paneUserInputArea.setEditable(true);
            else
                this.paneUserInputArea.setEditable(false);

            if(evt.getKeyChar() == KeyEvent.VK_SPACE){
                this.raceData.checkCorrect(' ');
                if(raceData.getCurrentLetter() == ' ')
                    paneUserInputArea.setText("");
                this.TypeSpeed.setText(String.format("%.0f", raceData.getTypingSpeed()) + " WPM");
            }
            else if(evt.getKeyChar() == KeyEvent.VK_BACKSPACE && raceData.getIsWrong()){
                this.raceData.backSpace();
            }
            else if(evt.getKeyChar() != KeyEvent.VK_BACKSPACE){
                this.raceData.checkCorrect(evt.getKeyChar()); 
            }
            this.setPaneAreaPrompt();    
            //this.paneUserInputArea.setText(" ");
            //this.paneUserInputArea.setText(raceData.getDisplayString());

            if(!raceData.getIsWrong())
                this.correctColorShowerPannel.setBackground(green);
            else
                this.correctColorShowerPannel.setBackground(red);
        }
        if(raceData.getPromptcompleted()){
            this.startRace = false;
            this.TypeSpeed.setText(String.format("%.0f", raceData.getTypingSpeed()) + " WPM");
            this.NextRace.setEnabled(true);
        }
        
    }//GEN-LAST:event_paneUserInputAreaKeyTyped

    private void paneUserInputAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paneUserInputAreaKeyReleased
       
    }//GEN-LAST:event_paneUserInputAreaKeyReleased

    private void paneUserInputAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paneUserInputAreaKeyPressed
         
    }//GEN-LAST:event_paneUserInputAreaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MainMenu;
    private javax.swing.JButton NextRace;
    private javax.swing.JLabel TimeLeftTillRace;
    private javax.swing.JLabel TypeSpeed;
    private javax.swing.JPanel correctColorShowerPannel;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane panePromptArea;
    private javax.swing.JTextPane paneUserInputArea;
    private javax.swing.JLabel startLight;
    // End of variables declaration//GEN-END:variables
}
